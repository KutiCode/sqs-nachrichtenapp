name: CI/CD Pipeline

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint Backend Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./backend/Dockerfile

      - name: Lint Frontend Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./frontend/Dockerfile

  build-test-backend:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'

      - name: Verify Java version
        run: java -version

      - name: Build backend
        run: |
          cd backend
          mvn clean install

      - name: Run backend tests
        run: |
          cd backend
          mvn test

      - name: Build backend package with Maven
        run: mvn -B package --file backend/pom.xml

  sonarcloud-backend-analysis:
    needs: build-test-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze Spring Boot backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd backend
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sqs-test_backend -Dsonar.organization=sqs-nachrichtenapp -Dsonar.branch.name=main -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  build-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies of frontend
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm test
        env:
          CI: true

      - name: Build React Frontend
        run: |
          cd frontend
          npm run build

  sonarcloud-frontend-analysis:
    needs: build-test-frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run SonarCloud Analysis for Frontend
        working-directory: frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: npx sonar-scanner -Dsonar.branch.name=main -Dsonar.projectKey=sqs-test_frontend -Dsonar.organization=sqs-nachrichtenapp -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      
      
  docker-build-push:
    needs: [build-test-backend, sonarcloud-backend-analysis, sonarcloud-frontend-analysis]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Prepare lowercase variables
        run: echo "LOWER_REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend Docker image
        run: |
          docker build -t ghcr.io/${{env.LOWER_REPO_NAME}}/backend:latest ./backend
          docker push ghcr.io/${{ env.LOWER_REPO_NAME}}/backend:latest

      - name: Build and push frontend Docker image
        run: |
          docker build -t ghcr.io/${{ env.LOWER_REPO_NAME }}/frontend:latest ./frontend
          docker push ghcr.io/${{ env.LOWER_REPO_NAME }}/frontend:latest
  run-artillery-test-on-container:
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start Docker Container
        run: docker-compose -f ./docker-compose.yml up -d

      - name: Wait for services to start
        run: sleep 30

      - name: Run Artillery Tests
        if: success()
        run: |
          npm install -g artillery
          artillery run artillery/artillery.yml
