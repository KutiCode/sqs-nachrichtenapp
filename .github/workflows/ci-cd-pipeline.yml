name: CI/CD Pipeline

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        id: setup-java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'

      - name: Verify Java version
        run: java -version

      - name: Build and Test Backend
        run: |
          cd backend
          export JAVA_HOME=${{ steps.setup-java.outputs.path }}
          ./mvnw clean install
          ./mvnw test

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies and build React Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Run frontend tests
        run: |
          cd frontend
          npm test
        env:
          CI: true

      - name: Collect frontend coverage
        run: |
          cd frontend
          npm run test -- --coverage

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Backend
        run: |
          cd backend
          ./mvnw clean install
          ./mvnw spring-boot:run &

      - name: Deploy Frontend
        run: |
          cd frontend
          npm start &

  sonarcloud:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze Backend and Frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd backend
          export JAVA_HOME=${{ steps.setup-java.outputs.path }}
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=KutiCode_sqs-nachrichtenapp
